/*
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */
buildscript {
  ext.kotlin_version = '1.3.72'

  repositories {
    mavenCentral()
    jcenter()
  }

  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    classpath 'ru.vyarus:gradle-animalsniffer-plugin:1.5.0'
    classpath 'com.github.ben-manes:gradle-versions-plugin:0.28.0'
    classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
    classpath 'com.vanniktech:gradle-maven-publish-plugin:0.9.0'
    classpath 'io.gitlab.arturbosch.detekt:detekt-gradle-plugin:1.9.1'
  }
}

apply from: "${rootProject.projectDir}/buildscripts/git.gradle"

subprojects {
  apply from: "${rootProject.projectDir}/buildscripts/dependencies.gradle"

  apply plugin: 'org.jetbrains.kotlin.jvm'
  apply plugin: 'ru.vyarus.animalsniffer'
  apply plugin: 'com.github.ben-manes.versions'
  apply plugin: 'jacoco'
  apply plugin: 'io.gitlab.arturbosch.detekt'

  repositories {
    mavenCentral()
    jcenter()
  }

  plugins.withId('application') {
    project.apply plugin: 'com.github.johnrengelman.shadow'
  }

  plugins.withId('java-library') {
    if (project.path != ':sample-generator') {
      project.apply plugin: 'com.vanniktech.maven.publish'
    }
  }

  dependencies {
    signature 'org.codehaus.mojo.signature:java18:1.0@signature'

    implementation artefacts.kotlin.jdkStdlib

    testImplementation artefacts.junit.api
    testRuntimeOnly artefacts.junit.runtime
    testImplementation artefacts.truth

    detekt artefacts.detekt.cli
    detektPlugins artefacts.detekt.plugins
  }

  test {
    useJUnitPlatform()
  }

  jacocoTestReport {
    dependsOn test
    reports {
      xml.enabled true
      html.enabled true
    }
  }

  tasks.withType(JavaCompile).configureEach { task ->
    task.options.encoding = 'UTF-8'
    task.sourceCompatibility = JavaVersion.VERSION_1_8
    task.targetCompatibility = JavaVersion.VERSION_1_8
  }

  tasks.withType(org.jetbrains.kotlin.gradle.dsl.KotlinJvmCompile).configureEach { task ->
    task.kotlinOptions {
      jvmTarget = versions.jvm
    }
  }

  tasks.detekt.jvmTarget = '1.8'

  detekt {
    failFast = false
    buildUponDefaultConfig = false

    config = files("$rootDir/config/detekt/detekt.yml")
    // Uncomment the following line to suppress issues before introducing detekt
    /* baseline = file("$projectDir/config/detekt/baseline.xml") */

    reports {
      html.enabled = true
      xml.enabled = true
    }
  }
}
